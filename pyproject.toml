[tool.poetry]
name = "shift-test-task"
version = "0.1.0"
description = ""
authors = ["Pololoshka <sokolova.polya.98gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.3"
uvicorn = "^0.29.0"
python-multipart = "^0.0.9"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.29" }
asyncpg = "^0.29.0"
pydantic = "^2.7.1"
pydantic-settings = "^2.2.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt==4.0.1"], version = "^1.7.4"}
alembic = "^1.13.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
python-dotenv = "^1.0.1"
pytest-asyncio = "^0.21.2"
httpx = "^0.27.0"
# Linters and Formatters
ruff = "^0.4.3"
pre-commit = "^3.7.0"
mypy = "^1.9.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers"
asyncio_mode = "auto"

[tool.mypy]
plugins = ["pydantic.mypy"]
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
extend-exclude = [".venv"]
line-length = 100

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/#error-e
select = [
    "E",   # Error
    "F",   # Pyflakes
    "I",   # Isort
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "C90", # mccabe for complexicty
    "UP",  # pyupgrade
    "T20", # flake8-print
]


[tool.ruff.lint.extend-per-file-ignores]
"test*" = [
    "S101", # Allow use of asserts
]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.mccabe]
max-complexity = 8
